From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Sat, 23 Apr 2022 11:38:02 +0200
Subject: [PATCH 1/1] Fix fd leak in NODERAWFS introduced by #14808

`refcnt` (and not `refcnf`) needs to be initialized by 1 when
creating the filestream.

Also, apply #16661 to the other `FS.createStream` invocations
as well.

Upstream-Status: Accepted [https://github.com/emscripten-core/emscripten/commit/53c9053936156b453cfa78af636f9f2568100f18]

diff --git a/src/library_noderawfs.js b/src/library_noderawfs.js
index 1111111..2222222 100644
--- a/src/library_noderawfs.js
+++ b/src/library_noderawfs.js
@@ -45,9 +45,9 @@ mergeInto(LibraryManager.library, {
       return { path: path, node: { id: st.ino, mode: mode, node_ops: NODERAWFS, path: path }};
     },
     createStandardStreams: function() {
-      FS.streams[0] = FS.createStream({ fd: 0, nfd: 0, position: 0, path: '', flags: 0, tty: true, seekable: false });
+      FS.streams[0] = FS.createStream({ nfd: 0, position: 0, path: '', flags: 0, tty: true, seekable: false }, 0, 0);
       for (var i = 1; i < 3; i++) {
-        FS.streams[i] = FS.createStream({ fd: i, nfd: i, position: 0, path: '', flags: 577, tty: true, seekable: false });
+        FS.streams[i] = FS.createStream({ nfd: i, position: 0, path: '', flags: 577, tty: true, seekable: false }, i, i);
       }
     },
     // generic function for all node creation
@@ -103,19 +103,19 @@ mergeInto(LibraryManager.library, {
     createStream: function(stream, fd_start, fd_end){
       // Call the original FS.createStream
       var rtn = VFS.createStream(stream, fd_start, fd_end);
-      if (typeof rtn.shared.refcnt == "undefined") {
-        rtn.shared.refcnf = 0;
+      if (typeof rtn.shared.refcnt == 'undefined') {
+        rtn.shared.refcnt = 1;
       } else {
-        rtn.shared.refcnf++;
+        rtn.shared.refcnt++;
       }
       return rtn;
-   },
-   closeStream: function(fd) {
-    if (FS.streams[fd]) {
-      FS.streams[fd].shared.refcnt--;
-    }
-     VFS.closeStream(fd);
-   },
+    },
+    closeStream: function(fd) {
+      if (FS.streams[fd]) {
+        FS.streams[fd].shared.refcnt--;
+      }
+      VFS.closeStream(fd);
+    },
     close: function(stream) {
       FS.closeStream(stream.fd);
       if (!stream.stream_ops && stream.shared.refcnt === 0) {
